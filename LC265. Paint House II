class Solution {
    public int minCostII(int[][] costs) {
        if(costs == null || costs.length == 0) return 0;
        int n = costs.length;
        int k = costs[0].length;
        
        int firstMin = -1, secondMin = -1;
        for(int i=0; i<n; i++) {
            int last1 = firstMin, last2 = secondMin;
            firstMin = -1; secondMin = -1;
            for(int j=0; j<k; j++) {
                if(j != last1) {
                    costs[i][j] += last1<0 ? 0 : costs[i-1][last1];
                } else {
                    costs[i][j] += last2<0 ? 0 : costs[i-1][last2];
                }
                
                if(firstMin < 0 || costs[i][j] < costs[i][firstMin]) {
                    secondMin = firstMin;
                    firstMin = j;
                } else if(secondMin < 0 || costs[i][j] < costs[i][secondMin]) {
                    secondMin = j;
                }
            }
        }
        return costs[n-1][firstMin];
    }
}


// time: O(n*k)
// space: O(1)
