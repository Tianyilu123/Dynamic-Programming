//

class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        if(triangle == null || triangle.size() == 0) return 0;
        int row = triangle.size(), len = triangle.get(row-1).size();
        int[] res = new int[len];
        
        for(int i=0; i<len; i++) {
            res[i] = triangle.get(row-1).get(i);
        }
        for(int i=row-2; i>=0; i--) {
            int n = triangle.get(i).size();
            for(int j=0; j<n; j++) {
                res[j] = triangle.get(i).get(j) + Math.min(res[j], res[j+1]);
            }
        }
        return res[0];
    }
}


// time: O(n^2), space: O(n)
