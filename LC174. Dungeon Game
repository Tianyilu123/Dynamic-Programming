//
class Solution {
    public int calculateMinimumHP(int[][] dungeon) {
        if(dungeon == null || dungeon.length == 0 || dungeon[0] == null ||
          dungeon[0].length == 0) return 0;
        int row = dungeon.length, col = dungeon[0].length;
        int[][] dp = new int[row+1][col+1];
        
        for(int i=0; i<row; i++) dp[i][col] = Integer.MAX_VALUE;
        for(int j=0; j<col; j++) dp[row][j] = Integer.MAX_VALUE;
        
        for(int i=row-1; i>=0; i--) {
            for(int j=col-1; j>=0; j--) {
                if(i==row-1 && j==col-1) {
                    dp[i][j] = Math.max(0, -dungeon[i][j]);
                } else {
                    dp[i][j] = Math.max(0, Math.min(dp[i+1][j], 
                                                   dp[i][j+1])-dungeon[i][j]);
                }
            }
        }
        return dp[0][0] + 1;
    }
}

//time: O(m*n)
// space: O(m*n)
